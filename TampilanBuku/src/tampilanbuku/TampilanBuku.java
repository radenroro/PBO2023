/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tampilanbuku;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import javax.swing.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.Vector;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;

/**
 *
 * @author Lenovo
 */
public class TampilanBuku extends javax.swing.JFrame {
    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<Laporan_BukuPOJO> Laporan_Buku;

    private int masukkanData(Connection conn, String ISBN, String Judul_Buku, int Tahun_Terbit, String Penerbit) throws SQLException {
    PreparedStatement pst = conn.prepareStatement("INSERT INTO Laporan_Buku (ISBN, Judul_Buku, Tahun_Terbit, Penerbit) VALUES (?, ?, ?, ?)");
    pst.setString(1, ISBN);
    pst.setString(2, Judul_Buku);
    pst.setInt(3, Tahun_Terbit);
    pst.setString(4, Penerbit);
    return pst.executeUpdate();
    }
    private int updateData(Connection conn, String ISBN, int Tahun_Terbit) throws SQLException {
    PreparedStatement pst = conn.prepareStatement("UPDATE Laporan_Buku SET Tahun_Terbit = ? WHERE ISBN = ?");
    pst.setInt(1, Tahun_Terbit);
    pst.setString(2, ISBN);
    return pst.executeUpdate();
    }

    private int deleteData(Connection conn, int Tahun_Terbit) throws SQLException {
       PreparedStatement pst = conn.prepareStatement("DELETE FROM Laporan_Buku WHERE Tahun_Terbit= ?");
       pst.setInt(1, Tahun_Terbit);
       return pst.executeUpdate();
    }
    private void tampil(Connection conn) {
        Laporan_Buku.clear();
        try {
            String sql = "select * from Laporan_Buku";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Laporan_BukuPOJO data = new Laporan_BukuPOJO();
                data.setISBN(String.valueOf(rs.getObject(1)));
                data.setJudul_Buku(String.valueOf(rs.getObject(2)));
                data.setTahun_Terbit(String.valueOf(rs.getObject(3)));
                data.setPenerbit(String.valueOf(rs.getObject(4)));
                Laporan_Buku.add(data);
            }
            DefaultTableModel model = (DefaultTableModel) Tabel_Buku.getModel();
            model.setRowCount(0);
            for (Laporan_BukuPOJO data : Laporan_Buku) {

                Object[] baris = new Object[4];
                baris[0] = data.getISBN();
                baris[1] = data.getJudul_Buku();
                baris[2] = data.getTahun_Terbit();
                baris[3] = data.getPenerbit();

                model.addRow(baris);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TampilanBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
   private Timer refreshTimer;
   public TampilanBuku (){
         try {
        Laporan_Buku = new ArrayList<>();
        initComponents();
        Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Laporan_Buku", "postgres", "1234");
        tampil(conn);

        // Membuat dan mengatur timer untuk auto-refresh setiap 5 detik (5000 milidetik)
        refreshTimer = new Timer(5000, (ActionEvent e) -> {
            tampil(conn);
        });
        refreshTimer.start();
    } catch (SQLException ex) {
        Logger.getLogger(Laporan_BukuPOJO.class.getName()).log(Level.SEVERE, null , ex);
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ISBN = new javax.swing.JLabel();
        Judul_Buku = new javax.swing.JLabel();
        Tahun_Terbit = new javax.swing.JLabel();
        Penerbit = new javax.swing.JLabel();
        jTextFieldISBN = new javax.swing.JTextField();
        jTextFieldJudul = new javax.swing.JTextField();
        jTextFieldTahun = new javax.swing.JTextField();
        jTextFieldPenerbit = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel_Buku = new javax.swing.JTable();
        Simpan = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Cetak = new javax.swing.JButton();
        Import = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setText("Cek Buku");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(316, 0, 63, 20);

        ISBN.setText("ISBN");
        getContentPane().add(ISBN);
        ISBN.setBounds(22, 41, 25, 16);
        ISBN.getAccessibleContext().setAccessibleName("\"ISBN\"");

        Judul_Buku.setText("Judul Buku");
        getContentPane().add(Judul_Buku);
        Judul_Buku.setBounds(22, 81, 57, 16);
        Judul_Buku.getAccessibleContext().setAccessibleName("\"Judul Buku\"");

        Tahun_Terbit.setText("Tahun Terbit");
        getContentPane().add(Tahun_Terbit);
        Tahun_Terbit.setBounds(22, 125, 65, 16);
        Tahun_Terbit.getAccessibleContext().setAccessibleName("\"Tahun Terbit\"");

        Penerbit.setText("Penerbit");
        getContentPane().add(Penerbit);
        Penerbit.setBounds(22, 162, 43, 16);
        Penerbit.getAccessibleContext().setAccessibleName("\"Penerbit\"");

        getContentPane().add(jTextFieldISBN);
        jTextFieldISBN.setBounds(133, 38, 120, 22);
        getContentPane().add(jTextFieldJudul);
        jTextFieldJudul.setBounds(133, 78, 120, 22);
        getContentPane().add(jTextFieldTahun);
        jTextFieldTahun.setBounds(133, 122, 120, 22);

        jTextFieldPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPenerbitActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldPenerbit);
        jTextFieldPenerbit.setBounds(133, 162, 120, 22);

        Tabel_Buku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Judul Buku", "Tahun Terbit", "Penerbit"
            }
        ));
        Tabel_Buku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabel_BukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabel_Buku);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(22, 202, 640, 273);

        Simpan.setText("Simpan");
        Simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanActionPerformed(evt);
            }
        });
        getContentPane().add(Simpan);
        Simpan.setBounds(460, 40, 72, 23);
        Simpan.getAccessibleContext().setAccessibleName("\"Simpan\"");

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update);
        Update.setBounds(280, 40, 72, 23);
        Update.getAccessibleContext().setAccessibleName("\"Update\"");

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete);
        Delete.setBounds(370, 40, 72, 23);
        Delete.getAccessibleContext().setAccessibleName("\"Delete\"");

        Cetak.setText("Cetak");
        Cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CetakActionPerformed(evt);
            }
        });
        getContentPane().add(Cetak);
        Cetak.setBounds(282, 78, 343, 23);
        Cetak.getAccessibleContext().setAccessibleName("\"Cetak\"");

        Import.setText("Import");
        Import.setToolTipText("");
        Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportActionPerformed(evt);
            }
        });
        getContentPane().add(Import);
        Import.setBounds(550, 40, 72, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanActionPerformed
    String ISBN = jTextFieldISBN.getText().trim();
    String Judul_Buku = jTextFieldJudul.getText().trim();
    int Tahun_Terbit = Integer.parseInt(jTextFieldTahun.getText());
    String Penerbit = jTextFieldPenerbit.getText().trim();

    EntityManager entityManager = Persistence.createEntityManagerFactory("TampilanBukuPU").createEntityManager();
    entityManager.getTransaction().begin();
    LaporanBuku b = new LaporanBuku();
    b.setISBN(ISBN);
    b.setJudulBuku(Judul_Buku);
    b.setTahunTerbit(Tahun_Terbit);
    b.setPenerbit(Penerbit);
    entityManager.persist(b);
    entityManager.getTransaction().commit();


    jTextFieldISBN.setText(" ");
    jTextFieldJudul.setText(" ");
    jTextFieldTahun.setText(" ");
    jTextFieldPenerbit.setText(" ");
    }//GEN-LAST:event_SimpanActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
    String ISBN = jTextFieldISBN.getText().trim();
    String Judul_Buku= jTextFieldJudul.getText().trim();
    int Tahun_Terbit = Integer.parseInt(jTextFieldTahun.getText());
    String Penerbit = jTextFieldPenerbit.getText().trim();
     
        EntityManagerFactory emf=Persistence.createEntityManagerFactory("TampilanBukuPU");  
        EntityManager em=emf.createEntityManager();  
        LaporanBuku b = new LaporanBuku();
        b.setISBN(ISBN);
        b.setJudulBuku(Judul_Buku);
        b.setTahunTerbit(Tahun_Terbit);
        b.setPenerbit(Penerbit);
        em.getTransaction().begin();
        em.merge(b);
        em.getTransaction().commit();
jTextFieldISBN.setText(" ");
jTextFieldJudul.setText(" ");
jTextFieldTahun.setText(" ");
jTextFieldPenerbit.setText(" ");
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        String ISBN = jTextFieldISBN.getText().trim();

    // awal persistence
        EntityManager entityManager = Persistence.createEntityManagerFactory("TampilanBukuPU").createEntityManager();
        entityManager.getTransaction().begin();
        LaporanBuku b = entityManager.find(LaporanBuku.class, ISBN);
        entityManager.remove(b);
        entityManager.getTransaction().commit();
        // akhir persistence
        
jTextFieldISBN.setText(" ");
jTextFieldJudul.setText(" ");
jTextFieldTahun.setText(" ");
jTextFieldPenerbit.setText(" ");
    }//GEN-LAST:event_DeleteActionPerformed

    private void Tabel_BukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabel_BukuMouseClicked
    int row = Tabel_Buku.getSelectedRow();
        jTextFieldISBN.setText(Tabel_Buku.getModel().getValueAt(row,0).toString());
        jTextFieldJudul.setText(Tabel_Buku.getModel().getValueAt(row,1).toString());
        jTextFieldTahun.setText(Tabel_Buku.getModel().getValueAt(row,2).toString());
        jTextFieldPenerbit.setText(Tabel_Buku.getModel().getValueAt(row,3).toString());
    }//GEN-LAST:event_Tabel_BukuMouseClicked

    private void CetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CetakActionPerformed
      try {
            EntityManager entityManager = Persistence.createEntityManagerFactory("TampilanBukuPU").createEntityManager();
            entityManager.getTransaction().begin();
            TypedQuery<LaporanBuku> querySelectAll = entityManager.createNamedQuery("LaporanBuku.findAll", LaporanBuku.class);
            List<LaporanBuku> results = querySelectAll.getResultList();
            entityManager.getTransaction().commit();
            entityManager.close();

            String jrxmlFile = new String("src/tampilanbuku/ReportBuku.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(jrxmlFile);
//            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, new JRBeanCollectionDataSource(results));
            JasperViewer.viewReport(jp, false);
        } catch (JRException ex) {
        Logger.getLogger(Laporan_BukuPOJO.class.getName()).log(Level.SEVERE, null , ex);
        } catch (Exception e) {
            Logger.getLogger(Laporan_BukuPOJO.class.getName()).log(Level.SEVERE, null, e);
}

    }//GEN-LAST:event_CetakActionPerformed

    private void jTextFieldPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPenerbitActionPerformed

    private void ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportActionPerformed
         JFileChooser filechooser = new JFileChooser();

                int i = filechooser.showOpenDialog(null);
                if (i == JFileChooser.APPROVE_OPTION) {
                    
                    EntityManager entityManager = Persistence.createEntityManagerFactory("TampilanBukuPU").createEntityManager();
                    entityManager.getTransaction().begin();

                    
                    File f = filechooser.getSelectedFile();
                    String filepath = f.getPath();
                    String fi = f.getName();
                    //Parsing CSV Data
                    System.out.print(filepath);
                    DefaultTableModel csv_data = new DefaultTableModel();

                    try {

                        InputStreamReader inputStreamReader = new InputStreamReader(new FileInputStream(filepath));
                        org.apache.commons.csv.CSVParser csvParser = CSVFormat.DEFAULT.parse(inputStreamReader);
                        for (CSVRecord csvRecord : csvParser) {

                        LaporanBuku b = new LaporanBuku();
                        b.setISBN(csvRecord.get(0));
                        b.setJudulBuku(csvRecord.get(1));
                        b.setTahunTerbit(Integer.parseInt(csvRecord.get(2)));
                        b.setPenerbit(csvRecord.get(3));
                        entityManager.persist(b);
                        
                        }
                        
                    } catch (Exception ex) {
                        System.out.println("Error in Parsing CSV File");
                    }
                    
                    entityManager.getTransaction().commit();
                }
    }//GEN-LAST:event_ImportActionPerformed
    
             
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TampilanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TampilanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TampilanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TampilanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TampilanBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cetak;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel ISBN;
    private javax.swing.JButton Import;
    private javax.swing.JLabel Judul_Buku;
    private javax.swing.JLabel Penerbit;
    private javax.swing.JButton Simpan;
    private javax.swing.JTable Tabel_Buku;
    private javax.swing.JLabel Tahun_Terbit;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldISBN;
    private javax.swing.JTextField jTextFieldJudul;
    private javax.swing.JTextField jTextFieldPenerbit;
    private javax.swing.JTextField jTextFieldTahun;
    // End of variables declaration//GEN-END:variables
}
