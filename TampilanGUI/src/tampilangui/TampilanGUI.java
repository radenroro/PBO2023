/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tampilangui;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author Lenovo
 */
public class TampilanGUI extends javax.swing.JFrame {
     public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<Makeup> Makeup;

    private int masukkanData(Connection conn, String Produk, int Harga) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("INSERT INTO Makeup (Produk,Harga) VALUES(?,?)");
        pst.setString(1, Produk); 
        pst.setInt(2, Harga); 
        return pst.executeUpdate();
    }
    private int deleteData(Connection conn, int Harga) throws SQLException {
       PreparedStatement pst = conn.prepareStatement("DELETE FROM Makeup WHERE Harga=?");
       pst.setInt(1, Harga);
       return pst.executeUpdate();
    }

    private int updateData(Connection conn, String Produk, int Harga) throws SQLException {
    PreparedStatement pst = conn.prepareStatement("UPDATE Makeup SET Harga = ? WHERE Produk = ?");
    pst.setInt(1, Harga); 
    pst.setString(2, Produk); 
    return pst.executeUpdate();
    }
            
    private void tampil(Connection conn) {
        Makeup.clear();
        try {
            String sql = "select * from Makeup";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Makeup data = new Makeup();
                data.setProduk(String.valueOf(rs.getObject(1)));
                data.setHarga(String.valueOf(rs.getObject(2)));
                Makeup.add(data);
            }
            DefaultTableModel model = (DefaultTableModel) Tabel_Makeup.getModel();
            model.setRowCount(0);
            for (Makeup data : Makeup) {

                Object[] baris = new Object[2];
                baris[0] = data.getProduk();
                baris[1] = data.getHarga();

                model.addRow(baris);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TampilanGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * Creates new form TampilanGUI
     */
    public TampilanGUI() {
        try {
            Makeup = new ArrayList<>();
            initComponents();
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Makeup", "postgres", "1234");
            tampil(conn);
        } catch (SQLException ex) {
            Logger.getLogger(TampilanGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Produk = new javax.swing.JLabel();
        Harga = new javax.swing.JLabel();
        jTextFieldProduk = new javax.swing.JTextField();
        jTextFieldHarga = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel_Makeup = new javax.swing.JTable();
        Beli = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Cetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel1.setText("SELAMAT BERBELANJA");

        Produk.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Produk.setText("Produk");

        Harga.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Harga.setText("Harga");

        jTextFieldProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProdukActionPerformed(evt);
            }
        });

        jTextFieldHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHargaActionPerformed(evt);
            }
        });

        Tabel_Makeup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produk", "Harga"
            }
        ));
        Tabel_Makeup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabel_MakeupMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabel_Makeup);

        Beli.setText("Beli");
        Beli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BeliActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Cetak.setText("Cetak");
        Cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel1)
                        .addGap(0, 249, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Produk)
                                    .addComponent(Harga))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldProduk, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(jTextFieldHarga))
                                .addGap(64, 64, 64))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Update)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Delete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Beli))
                                    .addComponent(Cetak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Produk)
                            .addComponent(jTextFieldProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Harga)
                            .addComponent(jTextFieldHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(Update)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Beli)
                            .addComponent(Delete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cetak)
                        .addGap(61, 61, 61))))
        );

        Beli.getAccessibleContext().setAccessibleName("\"Beli\"");
        Delete.getAccessibleContext().setAccessibleName("\"Delete\"");
        Update.getAccessibleContext().setAccessibleName("\"Update\"");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProdukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProdukActionPerformed

    private void jTextFieldHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHargaActionPerformed

    private void BeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeliActionPerformed
     String Produk = jTextFieldProduk.getText().trim();
     int Harga = Integer.parseInt(jTextFieldHarga.getText());

    if (!Produk.isEmpty())  {
    try {
        // TODO add your handling code here:
        Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Makeup", "postgres", "1234");
        int k = masukkanData(conn, Produk, Harga);
        if (k > 0) {
            tampil(conn);
            this.peringatan("Simpan Berhasil");
        } else {
            this.peringatan("Simpan Gagal");
        }
    } catch (SQLException ex) {
        Logger.getLogger(TampilanGUI.class.getName()).log(Level.SEVERE, null, ex);
    }
} else {
    this.peringatan("Input Data Makeup Gagal");
}
jTextFieldProduk.setText("");
jTextFieldHarga.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_BeliActionPerformed
    
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int Harga = Integer.parseInt(jTextFieldHarga.getText());
          if(Harga >0) {
             try{
              Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Makeup", "postgres", "1234");
              int k = deleteData(conn, Harga);
            if (k > 0) {
                tampil(conn);
                this.peringatan("Hapus berhasil");
            } else {
                this.peringatan("Hapus gagal");
         }
        } catch (SQLException e) {
    
        }
    }                                        
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
         String Produk = jTextFieldProduk.getText().trim();
        int Harga = Integer.parseInt(jTextFieldHarga.getText());
    
    if (!Produk.isEmpty()) {
        try {
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Makeup", "postgres", "1234");
            int rowsUpdated = updateData(conn, Produk, Harga);
            if (rowsUpdated > 0) {
                peringatan("Update Berhasil");
                tampil(conn);
            } else {
                peringatan("Update Gagal");
            }
        } catch (SQLException ex) {
            Logger.getLogger(TampilanGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        peringatan("Update Data Makeup Gagal");
    }
    }//GEN-LAST:event_UpdateActionPerformed

    private void Tabel_MakeupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabel_MakeupMouseClicked
        int row = Tabel_Makeup.getSelectedRow();
        jTextFieldProduk.setText(Tabel_Makeup.getModel().getValueAt(row,0).toString());
        jTextFieldHarga.setText(Tabel_Makeup.getModel().getValueAt(row,1).toString());
    }//GEN-LAST:event_Tabel_MakeupMouseClicked

    private void CetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CetakActionPerformed
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Makeup", "postgres", "1234");

            //File jasperFile = new File("src/pbopertemuan6/mahasiswa.jasper");
            // JasperPrint jp = JasperFillManager.fillReport(jasperFile.getPath(), null, conn);
            String jrxmlFile = new String("src/tampilangui/ReportM.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(jrxmlFile);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
            JasperViewer.viewReport(jp, false);
        } catch (JRException ex) {
            Logger.getLogger(TampilanGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TampilanGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CetakActionPerformed
     


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TampilanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TampilanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TampilanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TampilanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TampilanGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Beli;
    private javax.swing.JButton Cetak;
    private javax.swing.JButton Delete;
    private javax.swing.JLabel Harga;
    private javax.swing.JLabel Produk;
    private javax.swing.JTable Tabel_Makeup;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldHarga;
    private javax.swing.JTextField jTextFieldProduk;
    // End of variables declaration//GEN-END:variables
}
